{"ast":null,"code":"import _toConsumableArray from\"/Users/samirsilva/org-chart/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/samirsilva/org-chart/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/samirsilva/org-chart/node_modules/@babel/runtime/helpers/esm/createClass\";import*as d3 from\"d3\";var Chart=/*#__PURE__*/function(){function Chart(){var _this=this;_classCallCheck(this,Chart);// Exposed variables\nvar attrs={id:\"ID\".concat(Math.floor(Math.random()*1000000)),// Id for event handlings\nsvgWidth:800,svgHeight:600,marginTop:0,marginBottom:0,marginRight:0,marginLeft:0,container:'body',defaultTextFill:'white',nodeTextFill:'white',defaultFont:'Helvetica',backgroundColor:'#244A7C',data:null,depth:180,duration:600,strokeWidth:3,dropShadowId:null,initialZoom:1,onNodeClick:function onNodeClick(d){return d;}};this.getChartState=function(){return attrs;};// Dinamically set getter and setter functions for Chart class\nObject.keys(attrs).forEach(function(key){//@ts-ignore\n_this[key]=function(_){var string=\"attrs['\".concat(key,\"'] = _\");if(!arguments.length){return eval(\"attrs['\".concat(key,\"'];\"));}eval(string);return this;};});this.initializeEnterExitUpdatePattern();}_createClass(Chart,[{key:\"initializeEnterExitUpdatePattern\",value:function initializeEnterExitUpdatePattern(){d3.selection.prototype.patternify=function(params){var container=this;var selector=params.selector;var elementTag=params.tag;var data=params.data||[selector];// Pattern in action\nvar selection=container.selectAll('.'+selector).data(data,function(d,i){if(typeof d==='object'){if(d.id){return d.id;}}return i;});selection.exit().remove();selection=selection.enter().append(elementTag).merge(selection);selection.attr('class',selector);return selection;};}// This method retrieves passed node's children ID's (including node)      \n},{key:\"getNodeChildrenIds\",value:function getNodeChildrenIds(_ref,nodeIdsStore){var _this2=this;var data=_ref.data,children=_ref.children,_children=_ref._children;// Store current node ID\nnodeIdsStore.push(data.nodeId);// Loop over children and recursively store descendants id (expanded nodes)\nif(children){children.forEach(function(d){_this2.getNodeChildrenIds(d,nodeIdsStore);});}// Loop over _children and recursively store descendants id (collapsed nodes)\nif(_children){_children.forEach(function(d){_this2.getNodeChildrenIds(d,nodeIdsStore);});}// Return result\nreturn nodeIdsStore;}// This method can be invoked via chart.setZoomFactor API, it zooms to particulat scale\n},{key:\"setZoomFactor\",value:function setZoomFactor(zoomLevel){var attrs=this.getChartState();var calc=attrs.calc;// Store passed zoom level\nattrs.initialZoom=zoomLevel;// Rescale container element accordingly\nattrs.centerG.attr('transform',\" translate(\".concat(calc.centerX,\", \").concat(calc.nodeMaxHeight/2,\") scale(\").concat(attrs.initialZoom,\")\"));}},{key:\"render\",value:function render(){var _this3=this;//InnerFunctions which will update visuals\nvar attrs=this.getChartState();var thisObjRef=this;//Drawing containers\nvar container=d3.select(attrs.container);var containerRect=container.node().getBoundingClientRect();if(containerRect.width>0)attrs.svgWidth=containerRect.width;//Attach drop shadow id to attrs object\nthis.setDropShadowId(attrs);//Calculated properties\nvar calc={id:null,chartTopMargin:null,chartLeftMargin:null,chartWidth:null,chartHeight:null};calc.id=\"ID\".concat(Math.floor(Math.random()*1000000));// id for event handlings\ncalc.chartLeftMargin=attrs.marginLeft;calc.chartTopMargin=attrs.marginTop;calc.chartWidth=attrs.svgWidth-attrs.marginRight-calc.chartLeftMargin;calc.chartHeight=attrs.svgHeight-attrs.marginBottom-calc.chartTopMargin;attrs.calc=calc;// Get maximum node width and height\ncalc.nodeMaxWidth=d3.max(attrs.data,function(_ref2){var width=_ref2.width;return width;});calc.nodeMaxHeight=d3.max(attrs.data,function(_ref3){var height=_ref3.height;return height;});// Calculate max node depth (it's needed for layout heights calculation)\nattrs.depth=calc.nodeMaxHeight+100;calc.centerX=calc.chartWidth/2;//********************  LAYOUTS  ***********************\nvar layouts={treemap:null};attrs.layouts=layouts;// Generate tree layout function\nlayouts.treemap=d3.tree().size([calc.chartWidth,calc.chartHeight]).nodeSize([calc.nodeMaxWidth+100,calc.nodeMaxHeight+attrs.depth]);// ******************* BEHAVIORS . **********************\nvar behaviors={zoom:null};// Get zooming function \nbehaviors.zoom=d3.zoom().on(\"zoom\",function(d){return _this3.zoomed(d);});//****************** ROOT node work ************************\n// Convert flat data to hierarchical\nattrs.root=d3.stratify().id(function(_ref4){var nodeId=_ref4.nodeId;return nodeId;}).parentId(function(_ref5){var parentNodeId=_ref5.parentNodeId;return parentNodeId;})(attrs.data);// Set child nodes enter appearance positions\nattrs.root.x0=0;attrs.root.y0=0;/** Get all nodes as array (with extended parent & children properties set)\n            This way we can access any node's parent directly using node.parent - pretty cool, huh?\n        */attrs.allNodes=attrs.layouts.treemap(attrs.root).descendants();// Assign direct children and total subordinate children's cound\nattrs.allNodes.forEach(function(d){Object.assign(d.data,{directSubordinates:d.children?d.children.length:0,totalSubordinates:d.descendants().length-1});});// Collapse all children at first\nattrs.root.children.forEach(function(d){return _this3.collapse(d);});// Then expand some nodes, which have `expanded` property set\nattrs.root.children.forEach(function(d){return _this3.expandSomeNodes(d);});// *************************  DRAWING **************************\n//Add svg\nvar svg=container.patternify({tag:'svg',selector:'svg-chart-container'}).attr('width',\"100%\").attr('height',\"100vh\").attr('font-family',attrs.defaultFont).call(behaviors.zoom).attr('cursor','move').style('background-color',attrs.backgroundColor);attrs.svg=svg;//Add container g element\nvar chart=svg.patternify({tag:'g',selector:'chart'}).attr('transform',\"translate(\".concat(calc.chartLeftMargin,\",\").concat(calc.chartTopMargin,\")\"));// Add one more container g element, for better positioning controls\nattrs.centerG=chart.patternify({tag:'g',selector:'center-group'}).attr('transform',\"translate(\".concat(calc.centerX,\",\").concat(calc.nodeMaxHeight/2,\") scale(\").concat(attrs.initialZoom,\")\"));attrs.chart=chart;// ************************** ROUNDED AND SHADOW IMAGE  WORK USING SVG FILTERS **********************\n//Adding defs element for rounded image\nattrs.defs=svg.patternify({tag:'defs',selector:'image-defs'});// Adding defs element for image's shadow\nvar filterDefs=svg.patternify({tag:'defs',selector:'filter-defs'});// Adding shadow element - (play with svg filter here - https://bit.ly/2HwnfyL)\nvar filter=filterDefs.patternify({tag:'filter',selector:'shadow-filter-element'}).attr('id',attrs.dropShadowId).attr('y',\"\".concat(-50,\"%\")).attr('x',\"\".concat(-50,\"%\")).attr('height',\"\".concat(200,\"%\")).attr('width',\"\".concat(200,\"%\"));// Add gaussian blur element for shadows - we can control shadow length with this\nfilter.patternify({tag:'feGaussianBlur',selector:'feGaussianBlur-element'}).attr('in','SourceAlpha').attr('stdDeviation',3.1).attr('result','blur');// Add fe-offset element for shadows -  we can control shadow positions with it\nfilter.patternify({tag:'feOffset',selector:'feOffset-element'}).attr('in','blur').attr('result','offsetBlur').attr(\"dx\",4.28).attr(\"dy\",4.48).attr(\"x\",8).attr(\"y\",8);// Add fe-flood element for shadows - we can control shadow color and opacity with this element\nfilter.patternify({tag:'feFlood',selector:'feFlood-element'}).attr(\"in\",\"offsetBlur\").attr(\"flood-color\",'black').attr(\"flood-opacity\",0.3).attr(\"result\",\"offsetColor\");// Add feComposite element for shadows\nfilter.patternify({tag:'feComposite',selector:'feComposite-element'}).attr(\"in\",\"offsetColor\").attr(\"in2\",\"offsetBlur\").attr(\"operator\",\"in\").attr(\"result\",\"offsetBlur\");// Add feMerge element for shadows\nvar feMerge=filter.patternify({tag:'feMerge',selector:'feMerge-element'});// Add feMergeNode element for shadows\nfeMerge.patternify({tag:'feMergeNode',selector:'feMergeNode-blur'}).attr('in','offsetBlur');// Add another feMergeNode element for shadows\nfeMerge.patternify({tag:'feMergeNode',selector:'feMergeNode-graphic'}).attr('in','SourceGraphic');// Display tree contenrs\nthis.update(attrs.root);//#########################################  UTIL FUNCS ##################################\n// This function restyles foreign object elements ()\nd3.select(window).on(\"resize.\".concat(attrs.id),function(){var containerRect=container.node().getBoundingClientRect();//  if (containerRect.width > 0) attrs.svgWidth = containerRect.width;\n//\tmain();\n});return this;}// This function sets drop shadow ID to the passed object\n},{key:\"setDropShadowId\",value:function setDropShadowId(d){// If it's already set, then return \nif(d.dropShadowId)return;// Generate drop shadow ID\nvar id=\"\".concat(d.id,\"-drop-shadow\");// // If DOM object is available, then use UID method to generated shadow id\n// //@ts-ignore\n// if (typeof DOM != 'undefined') {\n//     //@ts-ignore\n//     id = DOM.uid(d.id).id;\n// }\n// Extend passed object with drop shadow ID\nObject.assign(d,{dropShadowId:id});}// This function can be invoked via chart.addNode API, and it adds node in tree at runtime\n},{key:\"addNode\",value:function addNode(obj){var attrs=this.getChartState();attrs.data.push(obj);// Update state of nodes and redraw graph\nthis.updateNodesState();return this;}// This function can be invoked via chart.removeNode API, and it removes node from tree at runtime\n},{key:\"removeNode\",value:function removeNode(nodeId){var attrs=this.getChartState();var node=attrs.allNodes.filter(function(_ref6){var data=_ref6.data;return data.nodeId==nodeId;})[0];// Remove all node childs\nif(node){// Retrieve all children nodes ids (including current node itself)\nvar nodeChildrenIds=this.getNodeChildrenIds(node,[]);// Filter out retrieved nodes and reassign data\nattrs.data=attrs.data.filter(function(d){return!nodeChildrenIds.includes(d.nodeId);});var updateNodesState=this.updateNodesState.bind(this);// Update state of nodes and redraw graph\nupdateNodesState();}}// This function basically redraws visible graph, based on nodes state\n},{key:\"update\",value:function update(_ref7){var _this4=this;var x0=_ref7.x0,y0=_ref7.y0,x=_ref7.x,y=_ref7.y;var attrs=this.getChartState();var calc=attrs.calc;//  Assigns the x and y position for the nodes\nvar treeData=attrs.layouts.treemap(attrs.root);// Get tree nodes and links and attach some properties \nvar nodes=treeData.descendants().map(function(d){// If at least one property is already set, then we don't want to reset other properties\nif(d.width)return d;// Declare properties with deffault values\nvar imageWidth=100;var imageHeight=100;var imageBorderColor='steelblue';var imageBorderWidth=0;var imageRx=0;var imageCenterTopDistance=0;var imageCenterLeftDistance=0;var borderColor='steelblue';var backgroundColor='steelblue';var width=d.data.width;var height=d.data.height;var dropShadowId=\"none\";// Override default values based on data\nif(d.data.nodeImage&&d.data.nodeImage.shadow){dropShadowId=\"url(#\".concat(attrs.dropShadowId,\")\");}if(d.data.nodeImage&&d.data.nodeImage.width){imageWidth=d.data.nodeImage.width;};if(d.data.nodeImage&&d.data.nodeImage.height){imageHeight=d.data.nodeImage.height;};if(d.data.nodeImage&&d.data.nodeImage.borderColor){imageBorderColor=_this4.rgbaObjToColor(d.data.nodeImage.borderColor);};if(d.data.nodeImage&&d.data.nodeImage.borderWidth){imageBorderWidth=d.data.nodeImage.borderWidth;};if(d.data.nodeImage&&d.data.nodeImage.centerTopDistance){imageCenterTopDistance=d.data.nodeImage.centerTopDistance;};if(d.data.nodeImage&&d.data.nodeImage.centerLeftDistance){imageCenterLeftDistance=d.data.nodeImage.centerLeftDistance;};if(d.data.borderColor){borderColor=_this4.rgbaObjToColor(d.data.borderColor);}if(d.data.backgroundColor){backgroundColor=_this4.rgbaObjToColor(d.data.backgroundColor);}if(d.data.nodeImage&&d.data.nodeImage.cornerShape.toLowerCase()==\"circle\"){imageRx=Math.max(imageWidth,imageHeight);}if(d.data.nodeImage&&d.data.nodeImage.cornerShape.toLowerCase()==\"rounded\"){imageRx=Math.min(imageWidth,imageHeight)/6;}// Extend node object with calculated properties\nreturn Object.assign(d,{imageWidth:imageWidth,imageHeight:imageHeight,imageBorderColor:imageBorderColor,imageBorderWidth:imageBorderWidth,borderColor:borderColor,backgroundColor:backgroundColor,imageRx:imageRx,width:width,height:height,imageCenterTopDistance:imageCenterTopDistance,imageCenterLeftDistance:imageCenterLeftDistance,dropShadowId:dropShadowId});});// Get all links\nvar links=treeData.descendants().slice(1);// Set constant depth for each nodes\nnodes.forEach(function(d){return d.y=d.depth*attrs.depth;});// ------------------- FILTERS ---------------------\n// Add patterns for each node (it's needed for rounded image implementation)\nvar patternsSelection=attrs.defs.selectAll('.pattern').data(nodes,function(_ref8){var id=_ref8.id;return id;});// Define patterns enter selection\nvar patternEnterSelection=patternsSelection.enter().append('pattern');// Patters update selection\nvar patterns=patternEnterSelection.merge(patternsSelection).attr('class','pattern').attr('height',1).attr('width',1).attr('id',function(_ref9){var id=_ref9.id;return id;});// Add images to patterns\nvar patternImages=patterns.patternify({tag:'image',selector:'pattern-image',data:function data(d){return[d];}}).attr('x',0).attr('y',0).attr('height',function(_ref10){var imageWidth=_ref10.imageWidth;return imageWidth;}).attr('width',function(_ref11){var imageHeight=_ref11.imageHeight;return imageHeight;}).attr('xlink:href',function(_ref12){var data=_ref12.data;return data.nodeImage.url;}).attr('viewbox',function(_ref13){var imageWidth=_ref13.imageWidth,imageHeight=_ref13.imageHeight;return\"0 0 \".concat(imageWidth*2,\" \").concat(imageHeight);}).attr('preserveAspectRatio','xMidYMin slice');// Remove patterns exit selection after animation\npatternsSelection.exit().transition().duration(attrs.duration).remove();// --------------------------  LINKS ----------------------\n// Get links selection\nvar linkSelection=attrs.centerG.selectAll('path.link').data(links,function(_ref14){var id=_ref14.id;return id;});// Enter any new links at the parent's previous position.\nvar linkEnter=linkSelection.enter().insert('path',\"g\").attr(\"class\",\"link\").attr('d',function(d){var o={x:x0,y:y0};return _this4.diagonal(o,o);});// Get links update selection\nvar linkUpdate=linkEnter.merge(linkSelection);// Styling links\nlinkUpdate.attr(\"fill\",\"none\").attr(\"stroke-width\",function(_ref15){var data=_ref15.data;return data.connectorLineWidth||2;}).attr('stroke',function(_ref16){var data=_ref16.data;if(data.connectorLineColor){return _this4.rgbaObjToColor(data.connectorLineColor);}return'green';}).attr('stroke-dasharray',function(_ref17){var data=_ref17.data;if(data.dashArray){return data.dashArray;}return'';});// Transition back to the parent element position\nlinkUpdate.transition().duration(attrs.duration).attr('d',function(d){return _this4.diagonal(d,d.parent);});// Remove any  links which is exiting after animation\nvar linkExit=linkSelection.exit().transition().duration(attrs.duration).attr('d',function(d){var o={x:x,y:y};return _this4.diagonal(o,o);}).remove();// --------------------------  NODES ----------------------\n// Get nodes selection\nvar nodesSelection=attrs.centerG.selectAll('g.node').data(nodes,function(_ref18){var id=_ref18.id;return id;});// Enter any new nodes at the parent's previous position.\nvar nodeEnter=nodesSelection.enter().append('g').attr('class','node').attr(\"transform\",function(d){return\"translate(\".concat(x0,\",\").concat(y0,\")\");}).attr('cursor','pointer').on('click',function(_ref19){var data=_ref19.data;if(_toConsumableArray(d3.event.srcElement.classList).includes('node-button-circle')){return;}attrs.onNodeClick(data.nodeId);});// Add background rectangle for the nodes \nnodeEnter.patternify({tag:'rect',selector:'node-rect',data:function data(d){return[d];}}).style(\"fill\",function(_ref20){var _children=_ref20._children;return _children?\"lightsteelblue\":\"#fff\";});// Add node icon image inside node\nnodeEnter.patternify({tag:'image',selector:'node-icon-image',data:function data(d){return[d];}}).attr('width',function(_ref21){var data=_ref21.data;return data.nodeIcon.size;}).attr('height',function(_ref22){var data=_ref22.data;return data.nodeIcon.size;}).attr(\"xlink:href\",function(_ref23){var data=_ref23.data;return data.nodeIcon.icon;}).attr('x',function(_ref24){var width=_ref24.width;return-width/2+5;}).attr('y',function(_ref25){var height=_ref25.height,data=_ref25.data;return height/2-data.nodeIcon.size-5;});// Add total descendants text\nnodeEnter.patternify({tag:'text',selector:'node-icon-text-total',data:function data(d){return[d];}}).text('test').attr('x',function(_ref26){var width=_ref26.width;return-width/2+7;}).attr('y',function(_ref27){var height=_ref27.height,data=_ref27.data;return height/2-data.nodeIcon.size-5;}).text(function(_ref28){var data=_ref28.data;return\"\".concat(data.totalSubordinates,\" Subordinates\");}).attr('fill',attrs.nodeTextFill).attr('font-weight','bold');// Add direct descendants text\nnodeEnter.patternify({tag:'text',selector:'node-icon-text-direct',data:function data(d){return[d];}}).text('test').attr('x',function(_ref29){var width=_ref29.width,data=_ref29.data;return-width/2+10+data.nodeIcon.size;}).attr('y',function(_ref30){var height=_ref30.height;return height/2-10;}).text(function(_ref31){var data=_ref31.data;return\"\".concat(data.directSubordinates,\" Direct \");}).attr('fill',attrs.nodeTextFill).attr('font-weight','bold');// Defined node images wrapper group\nvar nodeImageGroups=nodeEnter.patternify({tag:'g',selector:'node-image-group',data:function data(d){return[d];}});// Add background rectangle for node image\nnodeImageGroups.patternify({tag:'rect',selector:'node-image-rect',data:function data(d){return[d];}});// Node update styles\nvar nodeUpdate=nodeEnter.merge(nodesSelection).style('font','12px sans-serif');// Add foreignObject element inside rectangle\nvar fo=nodeUpdate.patternify({tag:'foreignObject',selector:'node-foreign-object',data:function data(d){return[d];}});// Add foreign object \nfo.patternify({tag:'xhtml:div',selector:'node-foreign-object-div',data:function data(d){return[d];}});this.restyleForeignObjectElements();// Add Node button circle's group (expand-collapse button)\nvar nodeButtonGroups=nodeEnter.patternify({tag:'g',selector:'node-button-g',data:function data(d){return[d];}}).on('click',function(d){return _this4.onButtonClick(d);});// Add expand collapse button circle \nnodeButtonGroups.patternify({tag:'circle',selector:'node-button-circle',data:function data(d){return[d];}});// Add button text \nnodeButtonGroups.patternify({tag:'text',selector:'node-button-text',data:function data(d){return[d];}}).attr('pointer-events','none');// Transition to the proper position for the node\nnodeUpdate.transition().attr('opacity',0).duration(attrs.duration).attr(\"transform\",function(_ref32){var x=_ref32.x,y=_ref32.y;return\"translate(\".concat(x,\",\").concat(y,\")\");}).attr('opacity',1);// Move images to desired positions\nnodeUpdate.selectAll('.node-image-group').attr('transform',function(_ref33){var imageWidth=_ref33.imageWidth,width=_ref33.width,imageHeight=_ref33.imageHeight,height=_ref33.height;var x=-imageWidth/2-width/2;var y=-imageHeight/2-height/2;return\"translate(\".concat(x,\",\").concat(y,\")\");});// Style node image rectangles\nnodeUpdate.select('.node-image-rect').attr('fill',function(_ref34){var id=_ref34.id;return\"url(#\".concat(id,\")\");}).attr('width',function(_ref35){var imageWidth=_ref35.imageWidth;return imageWidth;}).attr('height',function(_ref36){var imageHeight=_ref36.imageHeight;return imageHeight;}).attr('stroke',function(_ref37){var imageBorderColor=_ref37.imageBorderColor;return imageBorderColor;}).attr('stroke-width',function(_ref38){var imageBorderWidth=_ref38.imageBorderWidth;return imageBorderWidth;}).attr('rx',function(_ref39){var imageRx=_ref39.imageRx;return imageRx;}).attr('y',function(_ref40){var imageCenterTopDistance=_ref40.imageCenterTopDistance;return imageCenterTopDistance;}).attr('x',function(_ref41){var imageCenterLeftDistance=_ref41.imageCenterLeftDistance;return imageCenterLeftDistance;}).attr('filter',function(_ref42){var dropShadowId=_ref42.dropShadowId;return dropShadowId;});// Style node rectangles\nnodeUpdate.select('.node-rect').attr('width',function(_ref43){var data=_ref43.data;return data.width;}).attr('height',function(_ref44){var data=_ref44.data;return data.height;}).attr('x',function(_ref45){var data=_ref45.data;return-data.width/2;}).attr('y',function(_ref46){var data=_ref46.data;return-data.height/2;}).attr('rx',function(_ref47){var data=_ref47.data;return data.borderRadius||0;}).attr('stroke-width',function(_ref48){var data=_ref48.data;return data.borderWidth||attrs.strokeWidth;}).attr('cursor','pointer').attr('stroke',function(_ref49){var borderColor=_ref49.borderColor;return borderColor;}).style(\"fill\",function(_ref50){var backgroundColor=_ref50.backgroundColor;return backgroundColor;});// Move node button group to the desired position\nnodeUpdate.select('.node-button-g').attr('transform',function(_ref51){var data=_ref51.data;return\"translate(0,\".concat(data.height/2,\")\");}).attr('opacity',function(_ref52){var children=_ref52.children,_children=_ref52._children;if(children||_children){return 1;}return 0;});// Restyle node button circle\nnodeUpdate.select('.node-button-circle').attr('r',20).attr('stroke-width',function(_ref53){var data=_ref53.data;return data.borderWidth||attrs.strokeWidth;}).attr('fill',attrs.backgroundColor).attr('stroke',function(_ref54){var borderColor=_ref54.borderColor;return borderColor;});// Restyle button texts\nnodeUpdate.select('.node-button-text').attr('text-anchor','middle').attr('alignment-baseline','middle').attr('fill',attrs.defaultTextFill).attr('font-size',function(_ref55){var children=_ref55.children;if(children)return 40;return 30;}).text(function(_ref56){var children=_ref56.children;if(children)return'-';return'+';}).attr('y',this.isEdge()?10:0);// Remove any exiting nodes after transition\nvar nodeExitTransition=nodesSelection.exit().attr('opacity',1).transition().duration(attrs.duration).attr(\"transform\",function(d){return\"translate(\".concat(x,\",\").concat(y,\")\");}).on('end',function(){d3.select(this).remove();}).attr('opacity',0);// On exit reduce the node rects size to 0\nnodeExitTransition.selectAll('.node-rect').attr('width',10).attr('height',10).attr('x',0).attr('y',0);// On exit reduce the node image rects size to 0\nnodeExitTransition.selectAll('.node-image-rect').attr('width',10).attr('height',10).attr('x',function(_ref57){var width=_ref57.width;return width/2;}).attr('y',function(_ref58){var height=_ref58.height;return height/2;});// Store the old positions for transition.\nnodes.forEach(function(d){d.x0=d.x;d.y0=d.y;});}// This function detects whether current browser is edge\n},{key:\"isEdge\",value:function isEdge(){return window.navigator.userAgent.includes(\"Edge\");}/* Function converts rgba objects to rgba color string \n      {red:110,green:150,blue:255,alpha:1}  => rgba(110,150,255,1)\n    */},{key:\"rgbaObjToColor\",value:function rgbaObjToColor(_ref59){var red=_ref59.red,green=_ref59.green,blue=_ref59.blue,alpha=_ref59.alpha;return\"rgba(\".concat(red,\",\").concat(green,\",\").concat(blue,\",\").concat(alpha,\")\");}// Generate custom diagonal - play with it here - https://to.ly/1zhTK\n},{key:\"diagonal\",value:function diagonal(s,t){// Calculate some variables based on source and target (s,t) coordinates\nvar x=s.x;var y=s.y;var ex=t.x;var ey=t.y;var xrvs=ex-x<0?-1:1;var yrvs=ey-y<0?-1:1;var rdef=35;var rInitial=Math.abs(ex-x)/2<rdef?Math.abs(ex-x)/2:rdef;var r=Math.abs(ey-y)/2<rInitial?Math.abs(ey-y)/2:rInitial;var h=Math.abs(ey-y)/2-r;var w=Math.abs(ex-x)-r*2;// Build the path\nvar path=\"\\n               M \".concat(x,\" \").concat(y,\"\\n               L \").concat(x,\" \").concat(y+h*yrvs,\"\\n               C  \").concat(x,\" \").concat(y+h*yrvs+r*yrvs,\" \").concat(x,\" \").concat(y+h*yrvs+r*yrvs,\" \").concat(x+r*xrvs,\" \").concat(y+h*yrvs+r*yrvs,\"\\n               L \").concat(x+w*xrvs+r*xrvs,\" \").concat(y+h*yrvs+r*yrvs,\"\\n               C \").concat(ex,\"  \").concat(y+h*yrvs+r*yrvs,\" \").concat(ex,\"  \").concat(y+h*yrvs+r*yrvs,\" \").concat(ex,\" \").concat(ey-h*yrvs,\"\\n               L \").concat(ex,\" \").concat(ey,\"\\n             \");// Return result\nreturn path;}},{key:\"restyleForeignObjectElements\",value:function restyleForeignObjectElements(){var attrs=this.getChartState();attrs.svg.selectAll('.node-foreign-object').attr('width',function(_ref60){var width=_ref60.width;return width;}).attr('height',function(_ref61){var height=_ref61.height;return height;}).attr('x',function(_ref62){var width=_ref62.width;return-width/2;}).attr('y',function(_ref63){var height=_ref63.height;return-height/2;});attrs.svg.selectAll('.node-foreign-object-div').style('width',function(_ref64){var width=_ref64.width;return\"\".concat(width,\"px\");}).style('height',function(_ref65){var height=_ref65.height;return\"\".concat(height,\"px\");}).style('color','white').html(function(_ref66){var data=_ref66.data;return data.template;});}// Toggle children on click.\n},{key:\"onButtonClick\",value:function onButtonClick(d){// If childrens are expanded\nif(d.children){//Collapse them\nd._children=d.children;d.children=null;// Set descendants expanded property to false\nthis.setExpansionFlagToChildren(d,false);}else{// Expand children\nd.children=d._children;d._children=null;// Set each children as expanded\nd.children.forEach(function(_ref67){var data=_ref67.data;return data.expanded=true;});}// Redraw Graph \nthis.update(d);}// This function changes `expanded` property to descendants\n},{key:\"setExpansionFlagToChildren\",value:function setExpansionFlagToChildren(_ref68,flag){var _this5=this;var data=_ref68.data,children=_ref68.children,_children=_ref68._children;// Set flag to the current property\ndata.expanded=flag;// Loop over and recursively update expanded children's descendants\nif(children){children.forEach(function(d){_this5.setExpansionFlagToChildren(d,flag);});}// Loop over and recursively update collapsed children's descendants\nif(_children){_children.forEach(function(d){_this5.setExpansionFlagToChildren(d,flag);});}}// This function can be invoked via chart.setExpanded API, it expands or collapses particular node\n},{key:\"setExpanded\",value:function setExpanded(id,expandedFlag){var _this6=this;var attrs=this.getChartState();// Retrieve node by node Id\nvar node=attrs.allNodes.filter(function(_ref69){var data=_ref69.data;return data.nodeId==id;})[0];// If node exists, set expansion flag\nif(node)node.data.expanded=expandedFlag;// First expand all nodes\nattrs.root.children.forEach(function(d){return _this6.expand(d);});// Then collapse all nodes\nattrs.root.children.forEach(function(d){return _this6.collapse(d);});// Then expand only the nodes, which were previously expanded, or have an expand flag set\nattrs.root.children.forEach(function(d){return _this6.expandSomeNodes(d);});// Redraw graph\nthis.update(attrs.root);}// Method which only expands nodes, which have property set \"expanded=true\"\n},{key:\"expandSomeNodes\",value:function expandSomeNodes(d){var _this7=this;// If node has expanded property set\nif(d.data.expanded){// Retrieve node's parent\nvar parent=d.parent;// While we can go up \nwhile(parent){// Expand all current parent's children\nif(parent._children){parent.children=parent._children;}// Replace current parent holding object\nparent=parent.parent;}}// Recursivelly do the same for collapsed nodes\nif(d._children){d._children.forEach(function(ch){return _this7.expandSomeNodes(ch);});}// Recursivelly do the same for expanded nodes \nif(d.children){d.children.forEach(function(ch){return _this7.expandSomeNodes(ch);});}}// This function updates nodes state and redraws graph, usually after data change\n},{key:\"updateNodesState\",value:function updateNodesState(){var _this8=this;var attrs=this.getChartState();// Store new root by converting flat data to hierarchy\nattrs.root=d3.stratify().id(function(_ref70){var nodeId=_ref70.nodeId;return nodeId;}).parentId(function(_ref71){var parentNodeId=_ref71.parentNodeId;return parentNodeId;})(attrs.data);// Store positions, where children appear during their enter animation\nattrs.root.x0=0;attrs.root.y0=0;// Store all nodes in flat format (although, now we can browse parent, see depth e.t.c. )\nattrs.allNodes=attrs.layouts.treemap(attrs.root).descendants();// Store direct and total descendants count\nattrs.allNodes.forEach(function(d){Object.assign(d.data,{directSubordinates:d.children?d.children.length:0,totalSubordinates:d.descendants().length-1});});// Expand all nodes first\nattrs.root.children.forEach(this.expand);// Then collapse them all\nattrs.root.children.forEach(function(d){return _this8.collapse(d);});// Then only expand nodes, which have expanded proprty set to true\nattrs.root.children.forEach(function(ch){return _this8.expandSomeNodes(ch);});// Redraw Graphs\nthis.update(attrs.root);}// Function which collapses passed node and it's descendants\n},{key:\"collapse\",value:function collapse(d){var _this9=this;if(d.children){d._children=d.children;d._children.forEach(function(ch){return _this9.collapse(ch);});d.children=null;}}// Function which expands passed node and it's descendants \n},{key:\"expand\",value:function expand(d){var _this10=this;if(d._children){d.children=d._children;d.children.forEach(function(ch){return _this10.expand(ch);});d._children=null;}}// Zoom handler function\n},{key:\"zoomed\",value:function zoomed(){var attrs=this.getChartState();var chart=attrs.chart;// Get d3 event's transform object\nvar transform=d3.event.transform;// Store it\nattrs.lastTransform=transform;// Reposition and rescale chart accordingly\nchart.attr('transform',transform);// Apply new styles to the foreign object element\nif(this.isEdge()){this.restyleForeignObjectElements();}}}]);return Chart;}();export default Chart;","map":{"version":3,"sources":["/Users/samirsilva/org-chart/src/org-chart/tree-chart.js"],"names":["d3","Chart","attrs","id","Math","floor","random","svgWidth","svgHeight","marginTop","marginBottom","marginRight","marginLeft","container","defaultTextFill","nodeTextFill","defaultFont","backgroundColor","data","depth","duration","strokeWidth","dropShadowId","initialZoom","onNodeClick","d","getChartState","Object","keys","forEach","key","_","string","arguments","length","eval","initializeEnterExitUpdatePattern","selection","prototype","patternify","params","selector","elementTag","tag","selectAll","i","exit","remove","enter","append","merge","attr","nodeIdsStore","children","_children","push","nodeId","getNodeChildrenIds","zoomLevel","calc","centerG","centerX","nodeMaxHeight","thisObjRef","select","containerRect","node","getBoundingClientRect","width","setDropShadowId","chartTopMargin","chartLeftMargin","chartWidth","chartHeight","nodeMaxWidth","max","height","layouts","treemap","tree","size","nodeSize","behaviors","zoom","on","zoomed","root","stratify","parentId","parentNodeId","x0","y0","allNodes","descendants","assign","directSubordinates","totalSubordinates","collapse","expandSomeNodes","svg","call","style","chart","defs","filterDefs","filter","feMerge","update","window","obj","updateNodesState","nodeChildrenIds","includes","bind","x","y","treeData","nodes","map","imageWidth","imageHeight","imageBorderColor","imageBorderWidth","imageRx","imageCenterTopDistance","imageCenterLeftDistance","borderColor","nodeImage","shadow","rgbaObjToColor","borderWidth","centerTopDistance","centerLeftDistance","cornerShape","toLowerCase","min","links","slice","patternsSelection","patternEnterSelection","patterns","patternImages","url","transition","linkSelection","linkEnter","insert","o","diagonal","linkUpdate","connectorLineWidth","connectorLineColor","dashArray","parent","linkExit","nodesSelection","nodeEnter","event","srcElement","classList","nodeIcon","icon","text","nodeImageGroups","nodeUpdate","fo","restyleForeignObjectElements","nodeButtonGroups","onButtonClick","borderRadius","isEdge","nodeExitTransition","navigator","userAgent","red","green","blue","alpha","s","t","ex","ey","xrvs","yrvs","rdef","rInitial","abs","r","h","w","path","html","template","setExpansionFlagToChildren","expanded","flag","expandedFlag","expand","ch","transform","lastTransform"],"mappings":"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","sourcesContent":["\nimport * as d3 from \"d3\";\n\nclass Chart {\n    constructor() {\n        // Exposed variables\n        const attrs = {\n            id: `ID${Math.floor(Math.random() * 1000000)}`, // Id for event handlings\n            svgWidth: 800,\n            svgHeight: 600,\n            marginTop: 0,\n            marginBottom: 0,\n            marginRight: 0,\n            marginLeft: 0,\n            container: 'body',\n            defaultTextFill: 'white',\n            nodeTextFill: 'white',\n            defaultFont: 'Helvetica',\n            backgroundColor: '#244A7C',\n            data: null,\n            depth: 180,\n            duration: 600,\n            strokeWidth: 3,\n            dropShadowId: null,\n            initialZoom: 1,\n            onNodeClick: d => d,\n        };\n  \n        this.getChartState = () => attrs;\n  \n        // Dinamically set getter and setter functions for Chart class\n        Object.keys(attrs).forEach((key) => {\n            //@ts-ignore\n            this[key] = function(_) {\n                var string = `attrs['${key}'] = _`;\n                if (!arguments.length) {\n                    return eval(`attrs['${key}'];`);\n                }\n                eval(string);\n                return this;\n            };\n        });\n  \n  \n        this.initializeEnterExitUpdatePattern();\n    }\n  \n    initializeEnterExitUpdatePattern() {\n        d3.selection.prototype.patternify = function(params) {\n            var container = this;\n            var selector = params.selector;\n            var elementTag = params.tag;\n            var data = params.data || [selector];\n  \n            // Pattern in action\n            var selection = container.selectAll('.' + selector).data(data, (d, i) => {\n                if (typeof d === 'object') {\n                    if (d.id) {\n                        return d.id;\n                    }\n                }\n                return i;\n            });\n            selection.exit().remove();\n            selection = selection.enter().append(elementTag).merge(selection);\n            selection.attr('class', selector);\n            return selection;\n        };\n    }\n  \n    // This method retrieves passed node's children ID's (including node)      \n    getNodeChildrenIds({\n        data,\n        children,\n        _children\n    }, nodeIdsStore) {\n  \n        // Store current node ID\n        nodeIdsStore.push(data.nodeId);\n  \n        // Loop over children and recursively store descendants id (expanded nodes)\n        if (children) {\n            children.forEach(d => {\n                this.getNodeChildrenIds(d, nodeIdsStore)\n            })\n        }\n  \n        // Loop over _children and recursively store descendants id (collapsed nodes)\n        if (_children) {\n            _children.forEach(d => {\n                this.getNodeChildrenIds(d, nodeIdsStore)\n            })\n        }\n  \n        // Return result\n        return nodeIdsStore;\n    }\n  \n    // This method can be invoked via chart.setZoomFactor API, it zooms to particulat scale\n    setZoomFactor(zoomLevel) {\n        const attrs = this.getChartState();\n        const calc = attrs.calc;\n  \n        // Store passed zoom level\n        attrs.initialZoom = zoomLevel;\n  \n        // Rescale container element accordingly\n        attrs.centerG.attr('transform', ` translate(${calc.centerX}, ${calc.nodeMaxHeight/2}) scale(${attrs.initialZoom})`)\n    }\n  \n    render() {\n        //InnerFunctions which will update visuals\n  \n        const attrs = this.getChartState();\n        const thisObjRef = this;\n  \n        //Drawing containers\n        const container = d3.select(attrs.container);\n        const containerRect = container.node().getBoundingClientRect();\n        if (containerRect.width > 0) attrs.svgWidth = containerRect.width;\n  \n        //Attach drop shadow id to attrs object\n        this.setDropShadowId(attrs);\n  \n        //Calculated properties\n        const calc = {\n            id: null,\n            chartTopMargin: null,\n            chartLeftMargin: null,\n            chartWidth: null,\n            chartHeight: null\n        };\n        calc.id = `ID${Math.floor(Math.random() * 1000000)}`; // id for event handlings\n        calc.chartLeftMargin = attrs.marginLeft;\n        calc.chartTopMargin = attrs.marginTop;\n        calc.chartWidth = attrs.svgWidth - attrs.marginRight - calc.chartLeftMargin;\n        calc.chartHeight = attrs.svgHeight - attrs.marginBottom - calc.chartTopMargin;\n        attrs.calc = calc;\n  \n        // Get maximum node width and height\n        calc.nodeMaxWidth = d3.max(attrs.data, ({\n            width\n        }) => width);\n        calc.nodeMaxHeight = d3.max(attrs.data, ({\n            height\n        }) => height);\n  \n        // Calculate max node depth (it's needed for layout heights calculation)\n        attrs.depth = calc.nodeMaxHeight + 100;\n        calc.centerX = calc.chartWidth / 2;\n  \n        //********************  LAYOUTS  ***********************\n        const layouts = {\n            treemap: null\n        }\n        attrs.layouts = layouts;\n  \n        // Generate tree layout function\n        layouts.treemap = d3.tree().size([calc.chartWidth, calc.chartHeight])\n            .nodeSize([calc.nodeMaxWidth + 100, calc.nodeMaxHeight + attrs.depth])\n  \n        // ******************* BEHAVIORS . **********************\n        const behaviors = {\n            zoom: null\n        }\n  \n        // Get zooming function \n        behaviors.zoom = d3.zoom().on(\"zoom\", d => this.zoomed(d))\n  \n        //****************** ROOT node work ************************\n  \n        // Convert flat data to hierarchical\n        attrs.root = d3.stratify()\n            .id(({\n                nodeId\n            }) => nodeId)\n            .parentId(({\n                parentNodeId\n            }) => parentNodeId)\n            (attrs.data)\n  \n        // Set child nodes enter appearance positions\n        attrs.root.x0 = 0;\n        attrs.root.y0 = 0;\n  \n        /** Get all nodes as array (with extended parent & children properties set)\n            This way we can access any node's parent directly using node.parent - pretty cool, huh?\n        */\n        attrs.allNodes = attrs.layouts.treemap(attrs.root).descendants()\n  \n        // Assign direct children and total subordinate children's cound\n        attrs.allNodes.forEach(d => {\n            Object.assign(d.data, {\n                directSubordinates: d.children ? d.children.length : 0,\n                totalSubordinates: d.descendants().length - 1\n            })\n        })\n  \n        // Collapse all children at first\n        attrs.root.children.forEach(d => this.collapse(d));\n  \n        // Then expand some nodes, which have `expanded` property set\n        attrs.root.children.forEach(d => this.expandSomeNodes(d));\n  \n        // *************************  DRAWING **************************\n        //Add svg\n        const svg = container\n            .patternify({\n                tag: 'svg',\n                selector: 'svg-chart-container'\n            })\n            .attr('width', \"100%\")\n            .attr('height', \"100vh\")\n            .attr('font-family', attrs.defaultFont)\n            .call(behaviors.zoom)\n            .attr('cursor', 'move')\n            .style('background-color', attrs.backgroundColor);\n        attrs.svg = svg;\n  \n        //Add container g element\n        const chart = svg\n            .patternify({\n                tag: 'g',\n                selector: 'chart'\n            })\n            .attr('transform', `translate(${calc.chartLeftMargin},${calc.chartTopMargin})`);\n  \n        // Add one more container g element, for better positioning controls\n        attrs.centerG = chart.patternify({\n                tag: 'g',\n                selector: 'center-group'\n            })\n            .attr('transform', `translate(${calc.centerX},${calc.nodeMaxHeight/2}) scale(${attrs.initialZoom})`);\n  \n        attrs.chart = chart;\n  \n        // ************************** ROUNDED AND SHADOW IMAGE  WORK USING SVG FILTERS **********************\n  \n        //Adding defs element for rounded image\n        attrs.defs = svg.patternify({\n            tag: 'defs',\n            selector: 'image-defs'\n        });\n  \n        // Adding defs element for image's shadow\n        const filterDefs = svg.patternify({\n            tag: 'defs',\n            selector: 'filter-defs'\n        });\n  \n        // Adding shadow element - (play with svg filter here - https://bit.ly/2HwnfyL)\n        const filter = filterDefs.patternify({\n                tag: 'filter',\n                selector: 'shadow-filter-element'\n            })\n            .attr('id', attrs.dropShadowId)\n            .attr('y', `${-50}%`)\n            .attr('x', `${-50}%`)\n            .attr('height', `${200}%`)\n            .attr('width', `${200}%`);\n  \n        // Add gaussian blur element for shadows - we can control shadow length with this\n        filter.patternify({\n                tag: 'feGaussianBlur',\n                selector: 'feGaussianBlur-element'\n            })\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 3.1)\n            .attr('result', 'blur');\n  \n        // Add fe-offset element for shadows -  we can control shadow positions with it\n        filter.patternify({\n                tag: 'feOffset',\n                selector: 'feOffset-element'\n            })\n            .attr('in', 'blur')\n            .attr('result', 'offsetBlur')\n            .attr(\"dx\", 4.28)\n            .attr(\"dy\", 4.48)\n            .attr(\"x\", 8)\n            .attr(\"y\", 8)\n  \n        // Add fe-flood element for shadows - we can control shadow color and opacity with this element\n        filter.patternify({\n                tag: 'feFlood',\n                selector: 'feFlood-element'\n            })\n            .attr(\"in\", \"offsetBlur\")\n            .attr(\"flood-color\", 'black')\n            .attr(\"flood-opacity\", 0.3)\n            .attr(\"result\", \"offsetColor\");\n  \n        // Add feComposite element for shadows\n        filter.patternify({\n                tag: 'feComposite',\n                selector: 'feComposite-element'\n            })\n            .attr(\"in\", \"offsetColor\")\n            .attr(\"in2\", \"offsetBlur\")\n            .attr(\"operator\", \"in\")\n            .attr(\"result\", \"offsetBlur\");\n  \n        // Add feMerge element for shadows\n        const feMerge = filter.patternify({\n            tag: 'feMerge',\n            selector: 'feMerge-element'\n        });\n  \n        // Add feMergeNode element for shadows\n        feMerge.patternify({\n                tag: 'feMergeNode',\n                selector: 'feMergeNode-blur'\n            })\n            .attr('in', 'offsetBlur')\n  \n        // Add another feMergeNode element for shadows\n        feMerge.patternify({\n                tag: 'feMergeNode',\n                selector: 'feMergeNode-graphic'\n            })\n            .attr('in', 'SourceGraphic')\n  \n        // Display tree contenrs\n        this.update(attrs.root)\n  \n  \n  \n        //#########################################  UTIL FUNCS ##################################\n        // This function restyles foreign object elements ()\n  \n  \n  \n  \n        d3.select(window).on(`resize.${attrs.id}`, () => {\n            const containerRect = container.node().getBoundingClientRect();\n            //  if (containerRect.width > 0) attrs.svgWidth = containerRect.width;\n            //\tmain();\n        });\n  \n  \n        return this;\n    }\n  \n    // This function sets drop shadow ID to the passed object\n    setDropShadowId(d) {\n  \n        // If it's already set, then return \n        if (d.dropShadowId) return;\n  \n        // Generate drop shadow ID\n        let id = `${d.id}-drop-shadow`;\n  \n        // // If DOM object is available, then use UID method to generated shadow id\n        // //@ts-ignore\n        // if (typeof DOM != 'undefined') {\n        //     //@ts-ignore\n        //     id = DOM.uid(d.id).id;\n        // }\n  \n        // Extend passed object with drop shadow ID\n        Object.assign(d, {\n            dropShadowId: id\n        })\n    }\n  \n  \n    // This function can be invoked via chart.addNode API, and it adds node in tree at runtime\n    addNode(obj) {\n        const attrs = this.getChartState();\n        attrs.data.push(obj);\n  \n        // Update state of nodes and redraw graph\n        this.updateNodesState();\n        return this;\n    }\n  \n    // This function can be invoked via chart.removeNode API, and it removes node from tree at runtime\n    removeNode(nodeId) {\n        const attrs = this.getChartState();\n        const node = attrs.allNodes.filter(({\n            data\n        }) => data.nodeId == nodeId)[0];\n  \n  \n        // Remove all node childs\n        if (node) {\n            // Retrieve all children nodes ids (including current node itself)\n            const nodeChildrenIds = this.getNodeChildrenIds(node, []);\n  \n            // Filter out retrieved nodes and reassign data\n            attrs.data = attrs.data.filter(d => !nodeChildrenIds.includes(d.nodeId))\n  \n            const updateNodesState = this.updateNodesState.bind(this);\n            // Update state of nodes and redraw graph\n            updateNodesState();\n        }\n    }\n  \n    // This function basically redraws visible graph, based on nodes state\n    update({\n        x0,\n        y0,\n        x,\n        y\n    }) {\n  \n        const attrs = this.getChartState();\n        const calc = attrs.calc;\n  \n        //  Assigns the x and y position for the nodes\n        const treeData = attrs.layouts.treemap(attrs.root);\n  \n        // Get tree nodes and links and attach some properties \n        const nodes = treeData.descendants()\n            .map(d => {\n                // If at least one property is already set, then we don't want to reset other properties\n                if (d.width) return d;\n  \n                // Declare properties with deffault values\n                let imageWidth = 100;\n                let imageHeight = 100;\n                let imageBorderColor = 'steelblue';\n                let imageBorderWidth = 0;\n                let imageRx = 0;\n                let imageCenterTopDistance = 0;\n                let imageCenterLeftDistance = 0;\n                let borderColor = 'steelblue';\n                let backgroundColor = 'steelblue';\n                let width = d.data.width;\n                let height = d.data.height;\n                let dropShadowId = `none`;\n  \n                // Override default values based on data\n                if (d.data.nodeImage && d.data.nodeImage.shadow) {\n                    dropShadowId = `url(#${attrs.dropShadowId})`\n                }\n                if (d.data.nodeImage && d.data.nodeImage.width) {\n                    imageWidth = d.data.nodeImage.width\n                };\n                if (d.data.nodeImage && d.data.nodeImage.height) {\n                    imageHeight = d.data.nodeImage.height\n                };\n                if (d.data.nodeImage && d.data.nodeImage.borderColor) {\n                    imageBorderColor = this.rgbaObjToColor(d.data.nodeImage.borderColor)\n                };\n                if (d.data.nodeImage && d.data.nodeImage.borderWidth) {\n                    imageBorderWidth = d.data.nodeImage.borderWidth\n                };\n                if (d.data.nodeImage && d.data.nodeImage.centerTopDistance) {\n                    imageCenterTopDistance = d.data.nodeImage.centerTopDistance\n                };\n                if (d.data.nodeImage && d.data.nodeImage.centerLeftDistance) {\n                    imageCenterLeftDistance = d.data.nodeImage.centerLeftDistance\n                };\n                if (d.data.borderColor) {\n                    borderColor = this.rgbaObjToColor(d.data.borderColor);\n                }\n                if (d.data.backgroundColor) {\n                    backgroundColor = this.rgbaObjToColor(d.data.backgroundColor);\n                }\n                if (d.data.nodeImage &&\n                    d.data.nodeImage.cornerShape.toLowerCase() == \"circle\") {\n                    imageRx = Math.max(imageWidth, imageHeight);\n                }\n                if (d.data.nodeImage &&\n                    d.data.nodeImage.cornerShape.toLowerCase() == \"rounded\") {\n                    imageRx = Math.min(imageWidth, imageHeight) / 6;\n                }\n  \n                // Extend node object with calculated properties\n                return Object.assign(d, {\n                    imageWidth,\n                    imageHeight,\n                    imageBorderColor,\n                    imageBorderWidth,\n                    borderColor,\n                    backgroundColor,\n                    imageRx,\n                    width,\n                    height,\n                    imageCenterTopDistance,\n                    imageCenterLeftDistance,\n                    dropShadowId\n                });\n            });\n  \n        // Get all links\n        const links = treeData.descendants().slice(1);\n  \n        // Set constant depth for each nodes\n        nodes.forEach(d => d.y = d.depth * attrs.depth);\n  \n        // ------------------- FILTERS ---------------------\n  \n        // Add patterns for each node (it's needed for rounded image implementation)\n        const patternsSelection = attrs.defs.selectAll('.pattern')\n            .data(nodes, ({\n                id\n            }) => id);\n  \n        // Define patterns enter selection\n        const patternEnterSelection = patternsSelection.enter().append('pattern')\n  \n        // Patters update selection\n        const patterns = patternEnterSelection\n            .merge(patternsSelection)\n            .attr('class', 'pattern')\n            .attr('height', 1)\n            .attr('width', 1)\n            .attr('id', ({\n                id\n            }) => id)\n  \n        // Add images to patterns\n        const patternImages = patterns.patternify({\n                tag: 'image',\n                selector: 'pattern-image',\n                data: d => [d]\n            })\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('height', ({\n                imageWidth\n            }) => imageWidth)\n            .attr('width', ({\n                imageHeight\n            }) => imageHeight)\n            .attr('xlink:href', ({\n                data\n            }) => data.nodeImage.url)\n            .attr('viewbox', ({\n                imageWidth,\n                imageHeight\n            }) => `0 0 ${imageWidth*2} ${imageHeight}`)\n            .attr('preserveAspectRatio', 'xMidYMin slice')\n  \n        // Remove patterns exit selection after animation\n        patternsSelection.exit().transition().duration(attrs.duration).remove();\n  \n        // --------------------------  LINKS ----------------------\n        // Get links selection\n        const linkSelection = attrs.centerG.selectAll('path.link')\n            .data(links, ({\n                id\n            }) => id);\n  \n        // Enter any new links at the parent's previous position.\n        const linkEnter = linkSelection.enter()\n            .insert('path', \"g\")\n            .attr(\"class\", \"link\")\n            .attr('d', d => {\n                const o = {\n                    x: x0,\n                    y: y0\n                };\n                return this.diagonal(o, o)\n            });\n  \n        // Get links update selection\n        const linkUpdate = linkEnter.merge(linkSelection);\n  \n        // Styling links\n        linkUpdate\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", ({\n                data\n            }) => data.connectorLineWidth || 2)\n            .attr('stroke', ({\n                data\n            }) => {\n                if (data.connectorLineColor) {\n                    return this.rgbaObjToColor(data.connectorLineColor);\n                }\n                return 'green';\n            })\n            .attr('stroke-dasharray', ({\n                data\n            }) => {\n                if (data.dashArray) {\n                    return data.dashArray;\n                }\n                return '';\n            })\n  \n        // Transition back to the parent element position\n        linkUpdate.transition()\n            .duration(attrs.duration)\n            .attr('d', d => this.diagonal(d, d.parent));\n  \n        // Remove any  links which is exiting after animation\n        const linkExit = linkSelection.exit().transition()\n            .duration(attrs.duration)\n            .attr('d', d => {\n                const o = {\n                    x: x,\n                    y: y\n                };\n                return this.diagonal(o, o)\n            })\n            .remove();\n  \n        // --------------------------  NODES ----------------------\n        // Get nodes selection\n        const nodesSelection = attrs.centerG.selectAll('g.node')\n            .data(nodes, ({\n                id\n            }) => id)\n  \n        // Enter any new nodes at the parent's previous position.\n        const nodeEnter = nodesSelection.enter().append('g')\n            .attr('class', 'node')\n            .attr(\"transform\", d => `translate(${x0},${y0})`)\n            .attr('cursor', 'pointer')\n            .on('click', ({\n                data\n            }) => {\n                if ([...d3.event.srcElement.classList].includes('node-button-circle')) {\n                    return;\n                }\n                attrs.onNodeClick(data.nodeId);\n            });\n  \n        // Add background rectangle for the nodes \n        nodeEnter\n            .patternify({\n                tag: 'rect',\n                selector: 'node-rect',\n                data: d => [d]\n            })\n            .style(\"fill\", ({\n                _children\n            }) => _children ? \"lightsteelblue\" : \"#fff\")\n  \n  \n  \n        // Add node icon image inside node\n        nodeEnter\n            .patternify({\n                tag: 'image',\n                selector: 'node-icon-image',\n                data: d => [d]\n            })\n            .attr('width', ({\n                data\n            }) => data.nodeIcon.size)\n            .attr('height', ({\n                data\n            }) => data.nodeIcon.size)\n            .attr(\"xlink:href\", ({\n                data\n            }) => data.nodeIcon.icon)\n            .attr('x', ({\n                width\n            }) => -width / 2 + 5)\n            .attr('y', ({\n                height,\n                data\n            }) => height / 2 - data.nodeIcon.size - 5)\n  \n        // Add total descendants text\n        nodeEnter\n            .patternify({\n                tag: 'text',\n                selector: 'node-icon-text-total',\n                data: d => [d]\n            })\n            .text('test')\n            .attr('x', ({\n                width\n            }) => -width / 2 + 7)\n            .attr('y', ({\n                height,\n                data\n            }) => height / 2 - data.nodeIcon.size - 5)\n            .text(({\n                data\n            }) => `${data.totalSubordinates} Subordinates`)\n            .attr('fill', attrs.nodeTextFill)\n            .attr('font-weight', 'bold')\n  \n        // Add direct descendants text\n        nodeEnter\n            .patternify({\n                tag: 'text',\n                selector: 'node-icon-text-direct',\n                data: d => [d]\n            })\n            .text('test')\n            .attr('x', ({\n                width,\n                data\n            }) => -width / 2 + 10 + data.nodeIcon.size)\n            .attr('y', ({\n                height\n            }) => height / 2 - 10)\n            .text(({\n                data\n            }) => `${data.directSubordinates} Direct `)\n            .attr('fill', attrs.nodeTextFill)\n            .attr('font-weight', 'bold')\n  \n  \n        // Defined node images wrapper group\n        const nodeImageGroups = nodeEnter.patternify({\n            tag: 'g',\n            selector: 'node-image-group',\n            data: d => [d]\n        })\n  \n        // Add background rectangle for node image\n        nodeImageGroups\n            .patternify({\n                tag: 'rect',\n                selector: 'node-image-rect',\n                data: d => [d]\n            })\n  \n  \n  \n        // Node update styles\n        const nodeUpdate = nodeEnter.merge(nodesSelection)\n            .style('font', '12px sans-serif');\n  \n  \n  \n        // Add foreignObject element inside rectangle\n        const fo = nodeUpdate\n            .patternify({\n                tag: 'foreignObject',\n                selector: 'node-foreign-object',\n                data: d => [d]\n            })\n  \n  \n        // Add foreign object \n        fo.patternify({\n            tag: 'xhtml:div',\n            selector: 'node-foreign-object-div',\n            data: d => [d]\n        })\n  \n        this.restyleForeignObjectElements();\n  \n  \n  \n        // Add Node button circle's group (expand-collapse button)\n        const nodeButtonGroups = nodeEnter\n            .patternify({\n                tag: 'g',\n                selector: 'node-button-g',\n                data: d => [d]\n            })\n            .on('click', d => this.onButtonClick(d))\n  \n        // Add expand collapse button circle \n        nodeButtonGroups\n            .patternify({\n                tag: 'circle',\n                selector: 'node-button-circle',\n                data: d => [d]\n            })\n  \n        // Add button text \n        nodeButtonGroups\n            .patternify({\n                tag: 'text',\n                selector: 'node-button-text',\n                data: d => [d]\n            })\n            .attr('pointer-events', 'none')\n  \n        // Transition to the proper position for the node\n        nodeUpdate.transition()\n            .attr('opacity', 0)\n            .duration(attrs.duration)\n            .attr(\"transform\", ({\n                x,\n                y\n            }) => `translate(${x},${y})`)\n            .attr('opacity', 1)\n  \n        // Move images to desired positions\n        nodeUpdate.selectAll('.node-image-group')\n            .attr('transform', ({\n                imageWidth,\n                width,\n                imageHeight,\n                height\n            }) => {\n                let x = -imageWidth / 2 - width / 2;\n                let y = -imageHeight / 2 - height / 2;\n                return `translate(${x},${y})`\n            })\n  \n        // Style node image rectangles\n        nodeUpdate.select('.node-image-rect')\n            .attr('fill', ({\n                id\n            }) => `url(#${id})`)\n            .attr('width', ({\n                imageWidth\n            }) => imageWidth)\n            .attr('height', ({\n                imageHeight\n            }) => imageHeight)\n            .attr('stroke', ({\n                imageBorderColor\n            }) => imageBorderColor)\n            .attr('stroke-width', ({\n                imageBorderWidth\n            }) => imageBorderWidth)\n            .attr('rx', ({\n                imageRx\n            }) => imageRx)\n            .attr('y', ({\n                imageCenterTopDistance\n            }) => imageCenterTopDistance)\n            .attr('x', ({\n                imageCenterLeftDistance\n            }) => imageCenterLeftDistance)\n            .attr('filter', ({\n                dropShadowId\n            }) => dropShadowId)\n  \n        // Style node rectangles\n        nodeUpdate.select('.node-rect')\n            .attr('width', ({\n                data\n            }) => data.width)\n            .attr('height', ({\n                data\n            }) => data.height)\n            .attr('x', ({\n                data\n            }) => -data.width / 2)\n            .attr('y', ({\n                data\n            }) => -data.height / 2)\n            .attr('rx', ({\n                data\n            }) => data.borderRadius || 0)\n            .attr('stroke-width', ({\n                data\n            }) => data.borderWidth || attrs.strokeWidth)\n            .attr('cursor', 'pointer')\n            .attr('stroke', ({\n                borderColor\n            }) => borderColor)\n            .style(\"fill\", ({\n                backgroundColor\n            }) => backgroundColor)\n  \n        // Move node button group to the desired position\n        nodeUpdate.select('.node-button-g')\n            .attr('transform', ({\n                data\n            }) => `translate(0,${data.height/2})`)\n            .attr('opacity', ({\n                children,\n                _children\n            }) => {\n                if (children || _children) {\n                    return 1;\n                }\n                return 0;\n            })\n  \n        // Restyle node button circle\n        nodeUpdate.select('.node-button-circle')\n            .attr('r', 20)\n            .attr('stroke-width', ({\n                data\n            }) => data.borderWidth || attrs.strokeWidth)\n            .attr('fill', attrs.backgroundColor)\n            .attr('stroke', ({\n                borderColor\n            }) => borderColor)\n  \n        // Restyle button texts\n        nodeUpdate.select('.node-button-text')\n            .attr('text-anchor', 'middle')\n            .attr('alignment-baseline', 'middle')\n            .attr('fill', attrs.defaultTextFill)\n            .attr('font-size', ({\n                children\n            }) => {\n                if (children) return 40;\n                return 30;\n            })\n            .text(({\n                children\n            }) => {\n                if (children) return '-';\n                return '+';\n            })\n            .attr('y', this.isEdge() ? 10 : 0)\n  \n        // Remove any exiting nodes after transition\n        const nodeExitTransition = nodesSelection.exit()\n            .attr('opacity', 1)\n            .transition()\n            .duration(attrs.duration)\n            .attr(\"transform\", d => `translate(${x},${y})`)\n            .on('end', function() {\n                d3.select(this).remove();\n            })\n            .attr('opacity', 0);\n  \n        // On exit reduce the node rects size to 0\n        nodeExitTransition.selectAll('.node-rect')\n            .attr('width', 10)\n            .attr('height', 10)\n            .attr('x', 0)\n            .attr('y', 0);\n  \n        // On exit reduce the node image rects size to 0\n        nodeExitTransition.selectAll('.node-image-rect')\n            .attr('width', 10)\n            .attr('height', 10)\n            .attr('x', ({\n                width\n            }) => width / 2)\n            .attr('y', ({\n                height\n            }) => height / 2)\n  \n        // Store the old positions for transition.\n        nodes.forEach(d => {\n            d.x0 = d.x;\n            d.y0 = d.y;\n        });\n    }\n  \n    // This function detects whether current browser is edge\n    isEdge() {\n        return window.navigator.userAgent.includes(\"Edge\");\n    }\n  \n    /* Function converts rgba objects to rgba color string \n      {red:110,green:150,blue:255,alpha:1}  => rgba(110,150,255,1)\n    */\n    rgbaObjToColor({\n        red,\n        green,\n        blue,\n        alpha\n    }) {\n        return `rgba(${red},${green},${blue},${alpha})`;\n    }\n  \n    // Generate custom diagonal - play with it here - https://to.ly/1zhTK\n    diagonal(s, t) {\n  \n        // Calculate some variables based on source and target (s,t) coordinates\n        const x = s.x;\n        const y = s.y;\n        const ex = t.x;\n        const ey = t.y;\n        let xrvs = ex - x < 0 ? -1 : 1;\n        let yrvs = ey - y < 0 ? -1 : 1;\n        let rdef = 35;\n        let rInitial = Math.abs(ex - x) / 2 < rdef ? Math.abs(ex - x) / 2 : rdef;\n        let r = Math.abs(ey - y) / 2 < rInitial ? Math.abs(ey - y) / 2 : rInitial;\n        let h = Math.abs(ey - y) / 2 - r;\n        let w = Math.abs(ex - x) - r * 2;\n  \n        // Build the path\n        const path = `\n               M ${x} ${y}\n               L ${x} ${y+h*yrvs}\n               C  ${x} ${y+h*yrvs+r*yrvs} ${x} ${y+h*yrvs+r*yrvs} ${x+r*xrvs} ${y+h*yrvs+r*yrvs}\n               L ${x+w*xrvs+r*xrvs} ${y+h*yrvs+r*yrvs}\n               C ${ex}  ${y+h*yrvs+r*yrvs} ${ex}  ${y+h*yrvs+r*yrvs} ${ex} ${ey-h*yrvs}\n               L ${ex} ${ey}\n             `\n        // Return result\n        return path;\n    }\n  \n    restyleForeignObjectElements() {\n        const attrs = this.getChartState();\n  \n        attrs.svg.selectAll('.node-foreign-object')\n            .attr('width', ({\n                width\n            }) => width)\n            .attr('height', ({\n                height\n            }) => height)\n            .attr('x', ({\n                width\n            }) => -width / 2)\n            .attr('y', ({\n                height\n            }) => -height / 2)\n        attrs.svg.selectAll('.node-foreign-object-div')\n            .style('width', ({\n                width\n            }) => `${width}px`)\n            .style('height', ({\n                height\n            }) => `${height}px`)\n            .style('color', 'white')\n            .html(({\n                data\n            }) => data.template)\n    }\n  \n    // Toggle children on click.\n    onButtonClick(d) {\n  \n        // If childrens are expanded\n        if (d.children) {\n  \n            //Collapse them\n            d._children = d.children;\n            d.children = null;\n  \n            // Set descendants expanded property to false\n            this.setExpansionFlagToChildren(d, false);\n        } else {\n  \n            // Expand children\n            d.children = d._children;\n            d._children = null;\n  \n            // Set each children as expanded\n            d.children.forEach(({\n                data\n            }) => data.expanded = true)\n        }\n  \n        // Redraw Graph \n        this.update(d);\n    }\n  \n    // This function changes `expanded` property to descendants\n    setExpansionFlagToChildren({\n        data,\n        children,\n        _children\n    }, flag) {\n  \n        // Set flag to the current property\n        data.expanded = flag;\n  \n        // Loop over and recursively update expanded children's descendants\n        if (children) {\n            children.forEach(d => {\n                this.setExpansionFlagToChildren(d, flag)\n            })\n        }\n  \n        // Loop over and recursively update collapsed children's descendants\n        if (_children) {\n            _children.forEach(d => {\n                this.setExpansionFlagToChildren(d, flag)\n            })\n        }\n    }\n  \n    // This function can be invoked via chart.setExpanded API, it expands or collapses particular node\n    setExpanded(id, expandedFlag) {\n        const attrs = this.getChartState();\n        // Retrieve node by node Id\n        const node = attrs.allNodes.filter(({\n            data\n        }) => data.nodeId == id)[0]\n  \n        // If node exists, set expansion flag\n        if (node) node.data.expanded = expandedFlag;\n  \n        // First expand all nodes\n        attrs.root.children.forEach(d => this.expand(d));\n  \n        // Then collapse all nodes\n        attrs.root.children.forEach(d => this.collapse(d));\n  \n        // Then expand only the nodes, which were previously expanded, or have an expand flag set\n        attrs.root.children.forEach(d => this.expandSomeNodes(d));\n  \n        // Redraw graph\n        this.update(attrs.root);\n    }\n  \n    // Method which only expands nodes, which have property set \"expanded=true\"\n    expandSomeNodes(d) {\n  \n        // If node has expanded property set\n        if (d.data.expanded) {\n  \n            // Retrieve node's parent\n            let parent = d.parent;\n  \n            // While we can go up \n            while (parent) {\n  \n                // Expand all current parent's children\n                if (parent._children) {\n                    parent.children = parent._children;\n                }\n  \n                // Replace current parent holding object\n                parent = parent.parent;\n            }\n        }\n  \n        // Recursivelly do the same for collapsed nodes\n        if (d._children) {\n            d._children.forEach(ch => this.expandSomeNodes(ch));\n        }\n  \n        // Recursivelly do the same for expanded nodes \n        if (d.children) {\n            d.children.forEach(ch => this.expandSomeNodes(ch));\n        }\n    }\n  \n  \n    // This function updates nodes state and redraws graph, usually after data change\n    updateNodesState() {\n        const attrs = this.getChartState();\n        // Store new root by converting flat data to hierarchy\n        attrs.root = d3.stratify()\n            .id(({\n                nodeId\n            }) => nodeId)\n            .parentId(({\n                parentNodeId\n            }) => parentNodeId)\n            (attrs.data)\n  \n        // Store positions, where children appear during their enter animation\n        attrs.root.x0 = 0;\n        attrs.root.y0 = 0;\n  \n        // Store all nodes in flat format (although, now we can browse parent, see depth e.t.c. )\n        attrs.allNodes = attrs.layouts.treemap(attrs.root).descendants()\n  \n        // Store direct and total descendants count\n        attrs.allNodes.forEach(d => {\n            Object.assign(d.data, {\n                directSubordinates: d.children ? d.children.length : 0,\n                totalSubordinates: d.descendants().length - 1\n            })\n        })\n  \n        // Expand all nodes first\n        attrs.root.children.forEach(this.expand);\n  \n        // Then collapse them all\n        attrs.root.children.forEach(d => this.collapse(d));\n  \n        // Then only expand nodes, which have expanded proprty set to true\n        attrs.root.children.forEach(ch => this.expandSomeNodes(ch));\n  \n        // Redraw Graphs\n        this.update(attrs.root)\n    }\n  \n  \n    // Function which collapses passed node and it's descendants\n    collapse(d) {\n        if (d.children) {\n            d._children = d.children;\n            d._children.forEach(ch => this.collapse(ch));\n            d.children = null;\n        }\n    }\n  \n    // Function which expands passed node and it's descendants \n    expand(d) {\n        if (d._children) {\n            d.children = d._children;\n            d.children.forEach(ch => this.expand(ch));\n            d._children = null;\n        }\n    }\n  \n    // Zoom handler function\n    zoomed() {\n        const attrs = this.getChartState();\n        const chart = attrs.chart;\n  \n        // Get d3 event's transform object\n        const transform = d3.event.transform;\n  \n        // Store it\n        attrs.lastTransform = transform;\n  \n        // Reposition and rescale chart accordingly\n        chart.attr('transform', transform);\n  \n        // Apply new styles to the foreign object element\n        if (this.isEdge()) {\n            this.restyleForeignObjectElements();\n        }\n  \n    }\n  \n  }\n  \n  export default Chart;"]},"metadata":{},"sourceType":"module"}